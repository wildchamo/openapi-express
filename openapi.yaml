openapi: 3.1.1

info:
  title: OpenAPI Express Platzi
  version: 1.0.0
  description: API First

servers:
  - url: http://localhost:4000/v1
    description: Versión 1 de la API
  - url: http://localhost:4000/v2
    description: Versión 2 de la API

components:
  schemas:
    HelloResponse:
      type: object
      properties:
        message:
          type: string
    HelloRootResponse:
      type: object
      properties:
        message:
          type: string
    Product:
      type: object
      required:
        - name
        - price
        - category
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 2
          maxLength: 100
        description:
          type: string
          maxLength: 500
        price:
          type: number
          minimum: 0
          multipleOf: 0.01
        category:
          type: string
          enum: [electronics, books, clothes, food]
        tags:
          type: array
          items:
            type: string
          minItems: 1
        inStock:
          type: boolean
        specifications:
          type: object
          additionalProperties:
            type: string
        ratings:
          type: array
          items:
            required:
              - score
              - comment
            properties:
              score:
                type: integer
                minimum: 1
                maximum: 5
              comment:
                type: string
                maxLength: 500
paths:
  /:
    get:
      summary: Hello Jose
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelloResponse"
  /hello:
    get:
      summary: Hello World
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelloRootResponse"
  /users:
    post:
      summary: crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - age
                - email
              properties:
                name:
                  type: string
                  minLength: 2
                age:
                  type: integer
                  minimum: 18
                email:
                  type: string
                  format: email
      responses:
        "201":
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  age:
                    type: integer
                  email:
                    type: string
  /users/{id}:
    get:
      summary: obtener un usuario por el id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Usuario obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    post:
      summary: actualizar un nuevo usuario existente
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - age
                - email
              properties:
                name:
                  type: string
                  minLength: 2
                age:
                  type: integer
                  minimum: 18
                email:
                  type: string
                  format: email
      responses:
        "200":
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  age:
                    type: integer
                  email:
                    type: string
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /products:
    post:
      summary: crear un nuevo producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

  /products/{id}:
    get:
      summary: obtener un producto por id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Producto obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      summary: actualizar un producto existente
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
